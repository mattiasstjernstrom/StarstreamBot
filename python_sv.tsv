Namn    Beskrivning
abs()   Returnerar absolutvärdet av ett tal
all()   Returnerar True om alla element i en itererbar objekt är sanna
any()   Returnerar True om något element i en itererbar objekt är sant
ascii() Returnerar en läsbar version av ett objekt. Ersätter icke-ascii-tecken med escape-tecken
bin()   Returnerar den binära versionen av ett tal
bool()  Returnerar det booleska värdet för det angivna objektet
bytearray() Returnerar en array av byte
bytes() Returnerar ett byte-objekt
callable()  Returnerar True om det angivna objektet kan anropas, annars False
chr()   Returnerar en tecken från den angivna Unicode-koden.
classmethod()   Konverterar en metod till en klassmetod
compile()   Returnerar den angivna källkoden som ett objekt, redo att köras
complex()   Returnerar ett komplext tal
delattr()   Tar bort det angivna attributet (egenskap eller metod) från det angivna objektet
dict()  Returnerar en dictionary (Array)
dir()   Returnerar en lista över de angivna objektets egenskaper och metoder
divmod()    Returnerar kvoten och resten när argument1 delas med argument2
enumerate() Tar en samling (t.ex. en tuple) och returnerar den som ett enumerate-objekt
eval()  Utvärderar och utför ett uttryck
exec()  Utför den angivna koden (eller objektet)
filter()    Använder en filterfunktion för att utesluta element i en itererbar objekt
float() Returnerar ett flyttal
format()    Formaterar ett angivet värde
frozenset() Returnerar ett frozenset-objekt
getattr()   Returnerar värdet av det angivna attributet (egenskap eller metod)
globals()   Returnerar den aktuella globala symboltabellen som en dictionary
hasattr()   Returnerar True om det angivna objektet har det angivna attributet (egenskap/metod)
hash()  Returnerar hashvärdet för ett angivet objekt
help()  Utför det inbyggda hjälpsystemet
hex()   Konverterar ett tal till en hexadecimal representation
id()    Returnerar id:et för ett objekt
input() Tillåter användarinmatning
int()   Returnerar ett heltal
isinstance()    Returnerar True om ett angivet objekt är en instans av ett angivet objekt
issubclass()    Returnerar True om en angiven klass är en subklass av ett angivet objekt
iter()  Returnerar ett iteratorobjekt
len()   Returnerar längden på ett objekt
list()  Returnerar en lista
locals()    Returnerar en uppdaterad dictionary över den aktuella lokala symboltabellen
map()   Returnerar den angivna iteratorn med den angivna funktionen applicerad på varje element
max()   Returnerar det största elementet i en itererbar
memoryview()    Returnerar ett memory view-objekt
min()   Returnerar det minsta elementet i en itererbar
next()  Returnerar nästa element i en itererbar
object()    Returnerar ett nytt objekt
oct()   Konverterar ett tal till oktalt format
open()  Öppnar en fil och returnerar ett filobjekt
ord()   Konverterar ett heltal som representerar Unicode för det angivna tecknet
pow()   Returnerar värdet av x upphöjt till y
print() Skriver till standardutmatningsenheten
property()  Hämtar, sätter, raderar en egenskap
range() Returnerar en sekvens av nummer, börjar från 0 och ökar med 1 (som standard)
repr()  Returnerar en läsbar version av ett objekt
reversed()   Returnerar en omvänd iterator
round()     Avrundar ett tal
set()   Returnerar ett nytt set-objekt
setattr()   Sätter en egenskap (attribut/metod) för ett objekt
slice()     Returnerar en skiva (slice) av ett objekt
sorted()    Returnerar en sorterad lista
staticmethod()  Konverterar en metod till en statisk metod
str()   Returnerar ett strängobjekt
sum()   Summerar elementen i en iterator
super() Returnerar ett objekt som representerar överordnad klass
tuple() Returnerar en tuple
type()  Returnerar typen av ett objekt
vars()  Returnerar dict-egenskapen för ett objekt
zip()   Returnerar en iterator från två eller flera iteratorer
capitalize()    Konverterar det första tecknet till versaler
casefold()  Konverterar strängen till gemener
center()    Returnerar en centrerad sträng
count() Returnerar antalet förekomster av ett angivet värde i en sträng
encode()    Returnerar en kodad version av strängen
endswith()  Returnerar True om strängen slutar med det angivna värdet
expandtabs()    Ställer in tabbstorleken för strängen
find()  Söker strängen efter ett angivet värde och returnerar positionen där det hittades
format()    Formaterar specificerade värden i en sträng
format_map()    Formaterar specificerade värden i en sträng
index() Söker strängen efter ett angivet värde och returnerar positionen där det hittades
isalnum()   Returnerar True om alla tecken i strängen är alfanumeriska
isalpha()   Returnerar True om alla tecken i strängen är bokstäver
isascii()   Returnerar True om alla tecken i strängen är ascii-tecken
isdecimal() Returnerar True om alla tecken i strängen är decimaler
isdigit()   Returnerar True om alla tecken i strängen är siffror
isidentifier()  Returnerar True om strängen är en identifierare
islower()   Returnerar True om alla tecken i strängen är gemener
isnumeric() Returnerar True om alla tecken i strängen är numeriska
isprintable()   Returnerar True om alla tecken i strängen är utskrivbara
isspace()   Returnerar True om alla tecken i strängen är blanksteg
istitle()   Returnerar True om strängen följer reglerna för en titel
isupper()   Returnerar True om alla tecken i strängen är versaler
join()  Konverterar elementen i en itererbar till en sträng
ljust() Returnerar en vänsterjusterad version av strängen
lower() Konverterar en sträng till gemener
lstrip()    Returnerar en vänstertrimmad version av strängen
maketrans() Returnerar en översättningstabell för användning i översättningar
partition() Returnerar en tuple där strängen delas upp i tre delar
replace()   Returnerar en sträng där ett angivet värde ersätts med ett annat angivet värde
rfind() Söker strängen efter ett angivet värde och returnerar den sista positionen där det hittades
rindex()    Söker strängen efter ett angivet värde och returnerar den sista positionen där det hittades
rjust() Returnerar en högerjusterad version av strängen
rpartition()    Returnerar en tuple där strängen delas upp i tre delar
rsplit()    Delar strängen vid det angivna avgränsaren och returnerar en lista
rstrip()    Returnerar en högertrimmad version av strängen
split() Delar strängen vid det angivna avgränsaren och returnerar en lista
splitlines()    Delar strängen vid radbrytningar och returnerar en lista
startswith()    Returnerar True om strängen börjar med det angivna värdet
strip() Returnerar en trimmad version av strängen
swapcase()  Byter fall, gemener blir versaler och vice versa
title() Konverterar det första tecknet i varje ord till versaler
translate() Returnerar en översatt sträng
upper() Konverterar en sträng till versaler
zfill() Fyller strängen med ett angivet antal 0-värden i början
append()    Lägger till ett element i slutet av listan
clear() Tar bort alla element från listan
copy()  Returnerar en kopia av listan
count() Returnerar antalet element med det angivna värdet
extend()    Lägger till elementen i en lista (eller vilken itererbar som helst) i slutet av den aktuella listan
index() Returnerar indexet för det första elementet med det angivna värdet
insert()    Lägger till ett element på den angivna positionen
pop()   Tar bort elementet på den angivna positionen
remove()    Tar bort det första elementet med det angivna värdet
reverse()   Vänder ordningen på listan
sort()  Sorterar listan
clear() Tar bort alla element från dictionaryn
copy()  Returnerar en kopia av dictionaryn
fromkeys()  Returnerar en dictionary med de angivna nycklarna och värdet
get()   Returnerar värdet för den angivna nyckeln
items() Returnerar en lista med en tuple för varje nyckel-värde-par
keys()  Returnerar en lista med dictionaryns nycklar
pop()   Tar bort elementet med den angivna nyckeln
popitem()   Tar bort det sist infogade nyckel-värde-paret
setdefault()    Returnerar värdet för den angivna nyckeln. Om nyckeln inte finns: infoga nyckeln med det angivna värdet
update()    Uppdaterar dictionaryn med de angivna nyckel-värde-paren
values()    Returnerar en lista med alla värden i dictionaryn
count() Returnerar antalet gånger ett angivet värde förekommer i en tuple
index() Söker i tuplen efter ett angivet värde och returnerar positionen där det hittades
add()   Lägger till ett element i mängden
clear() Tar bort alla element från mängden
copy()  Returnerar en kopia av mängden
difference()    Returnerar en mängd som innehåller skillnaden mellan två eller fler mängder
difference_update() Tar bort elementen i denna mängd som också ingår i en annan angiven mängd
discard()   Tar bort det angivna elementet
intersection()  Returnerar en mängd som är snittet av två eller fler mängder
intersection_update()   Tar bort elementen i denna mängd som inte finns i andra angivna mängder
isdisjoint()    Returnerar om två mängder har ett snitt eller inte
issubset()  Returnerar om en annan mängd innehåller denna mängd eller inte
issuperset()    Returnerar om denna mängd innehåller en annan mängd eller inte
pop()   Tar bort ett element från mängden
remove()    Tar bort det angivna elementet
symmetric_difference()  Returnerar en mängd med de symmetriska skillnaderna mellan två mängder
symmetric_difference_update()   Lägger till de symmetriska skillnaderna från denna mängd och en annan
union() Returnerar en mängd som innehåller unionen av mängder
update()    Uppdaterar mängden med en annan mängd eller vilken annan itererbar som helst
close() Stänger filen
detach()    Returnerar den separerade råströmmen från bufferten
fileno()    Returnerar ett nummer som representerar strömmen, ur operativsystemets perspektiv
flush() Spolar den interna bufferten
isatty()    Returnerar om filströmmen är interaktiv eller inte
read()  Returnerar filinnehållet
readable()  Returnerar om filströmmen kan läsas eller inte
readline()  Returnerar en rad från filen
readlines() Returnerar en lista med rader från filen
seek()  Ändrar filens position
seekable()  Returnerar om filen tillåter oss att ändra filens position
tell()  Returnerar den aktuella filpositionen
truncate()  Ändrar filens storlek till en angiven storlek
writable()  Returnerar om filen kan skrivas till eller inte
write() Skriver den angivna strängen till filen
writelines()    Skriver en lista med strängar till filen
and En logisk operator
as  Används för att skapa en alias
assert  För felsökning
break   För att bryta ut ur en loop
class   För att definiera en klass
continue    För att fortsätta till nästa iteration av en loop
def För att definiera en funktion
del För att ta bort ett objekt
elif    Används i villkorssatser, samma som else if
else    Används i villkorssatser
except  Används med undantag, vad man ska göra när ett undantag inträffar
False   Booleskt värde, resultat av jämförelseoperationer
finally Används med undantag, en block av kod som kommer att köras oavsett om det finns ett undantag eller inte
for För att skapa en for-loop
from    För att importera specifika delar av en modul
global  För att deklarera en global variabel
if  För att göra en villkorsutsaga
import  För att importera en modul
in  För att kontrollera om ett värde finns i en lista, tuple, etc.
is  För att testa om två variabler är lika
lambda  För att skapa en anonym funktion
None    Representerar ett nollvärde
nonlocal    För att deklarera en icke-lokal variabel
not En logisk operator
or  En logisk operator
pass    En tom sats, en sats som inte kommer att göra något
raise   För att kasta ett undantag
return  För att avsluta en funktion och returnera ett värde
True    Booleskt värde, resultat av jämförelseoperationer
try För att göra en try...except-sats
while   För att skapa en while-loop
with    Används för att förenkla hanteringen av undantag
yield   För att avsluta en funktion, returnerar en generator
ArithmeticError Kastas när ett fel inträffar i numeriska beräkningar
AssertionError  Kastas när ett assert-uttalande misslyckas
AttributeError  Kastas när attributreferensen eller tilldelningen misslyckas
Exception   Basen för alla undantag
EOFError    Kastas när input() -metoden når ett "slut på filen" -tillstånd (EOF)
FloatingPointError  Kastas när en flyttalberäkning misslyckas
GeneratorExit   Kastas när en generator stängs (med close() -metoden)
ImportError Kastas när en importerad modul inte finns
IndentationError    Kastas när indrag inte är korrekta
IndexError  Kastas när ett index i en sekvens inte finns
KeyError    Kastas när en nyckel inte finns i en dictionary
KeyboardInterrupt   Kastas när användaren trycker på Ctrl+c, Ctrl+z eller Delete
LookupError Kastas när fel som kastas inte kan hittas
MemoryError Kastas när ett program tar slut på minnet
NameError   Kastas när en variabel inte finns
NotImplementedError Kastas när en abstrakt metod kräver att en ärvd klass överskriver metoden
OSError Kastas när en systemrelaterad operation orsakar ett fel
OverflowError   Kastas när resultatet av en numerisk beräkning är för stort
ReferenceError  Kastas när en svag referens inte finns
RuntimeError    Kastas när ett fel inträffar som inte tillhör några specifika undantag
StopIteration   Kastas när next() -metoden för en iterator inte har fler värden
SyntaxError Kastas när ett syntaxfel inträffar
TabError    Kastas när indrag består av tabulatorer eller mellanslag
SystemError Kastas när ett systemfel inträffar
SystemExit  Kastas när sys.exit() -funktionen anropas
TypeError   Kastas när två olika typer kombineras
UnboundLocalError   Kastas när en lokal variabel refereras före tilldelning
UnicodeError    Kastas när ett unicode-problem uppstår
UnicodeEncodeError  Kastas när ett unicode-kodningsproblem uppstår
UnicodeDecodeError  Kastas när ett unicode-dekoderingsproblem uppstår
UnicodeTranslateError   Kastas när ett unicode-översättningsproblem uppstår
ValueError  Kastas när det finns ett fel värde i en angiven datatyp
ZeroDivisionError   Kastas när den andra operatorn i en division är noll